#!/bin/bash
#################################################################################
#										#
# Copyright 2016 Augustyn Ko≈Ñczak						#
#										#
# Licensed under the Apache License, Version 2.0 (the "License");		#
# you may not use this file except in compliance with the License.		#
# You may obtain a copy of the License at					#
#										#
#    http://www.apache.org/licenses/LICENSE-2.0					#
#										#
# Unless required by applicable law or agreed to in writing, software		#
# distributed under the License is distributed on an "AS IS" BASIS,		#
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.	#
# See the License for the specific language governing permissions and		#
# limitations under the License.						#
#										#
#################################################################################

directory="$HOME/git/git-tutorial";
clonerepositorycommand="git clone git@github.com:Augustyn/git-tutorial.git ${directory}"
gitstatus="git status"
gitinit="git init"

# Helpers:
timestamp=$(date +"%H%M%S");
esc="\033[0m"
command="\033[36;40m"
bold="\033[31;40m";
soft="\033[33;40m"

echo -e "\n\033[32;40;1mCreating new repository.${esc}\n"
echo -e "You can either create empty repository, or clone one."
echo -e "To create new, empty repository in current folder write: ${command}${gitinit}${esc}"; 
read; 
echo -e "${soft}Most${esc} of the times in our work we'll be cloning repository from some git management system like github. That's why I'll be cloning one too."
mkdir -p $(dirname ${directory});
echo -e "To clone our repository write: git clone path-to-repository directory-where-to-clone. \nex: ${command}${clonerepositorycommand}${esc}\n";echo -e "$(eval ${clonerepositorycommand})"; cd ${directory}
read;
echo -e "\n${soft}Status${esc} of repository can be checked with: '${command}${gitstatus}${esc}'\n This is current repository status:\n"; echo -e "$(eval ${gitstatus})" 
read;

if [ -f git.02.create.branch ]; then
        . git.02.create.branch;
else
        . ../git.02.create.branch;
fi
